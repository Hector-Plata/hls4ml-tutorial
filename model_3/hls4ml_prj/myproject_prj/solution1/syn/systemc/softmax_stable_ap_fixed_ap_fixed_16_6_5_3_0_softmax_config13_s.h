// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_HH_
#define _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_18s_18s_30_1_1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_exp_table1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_invert_table2.h"

namespace ap_rtl {

struct softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_4_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;


    // Module declarations
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s);

    ~softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s();

    sc_trace_file* mVcdFile;

    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_exp_table1* exp_table1_U;
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_invert_table2* invert_table2_U;
    myproject_mul_mul_18s_18s_30_1_1<1,1,18,18,30>* myproject_mul_mul_18s_18s_30_1_1_U222;
    myproject_mul_mul_18s_18s_30_1_1<1,1,18,18,30>* myproject_mul_mul_18s_18s_30_1_1_U223;
    myproject_mul_mul_18s_18s_30_1_1<1,1,18,18,30>* myproject_mul_mul_18s_18s_30_1_1_U224;
    myproject_mul_mul_18s_18s_30_1_1<1,1,18,18,30>* myproject_mul_mul_18s_18s_30_1_1_U225;
    myproject_mul_mul_18s_18s_30_1_1<1,1,18,18,30>* myproject_mul_mul_18s_18s_30_1_1_U226;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<18> > exp_table1_q0;
    sc_signal< sc_lv<10> > exp_table1_address1;
    sc_signal< sc_logic > exp_table1_ce1;
    sc_signal< sc_lv<18> > exp_table1_q1;
    sc_signal< sc_lv<10> > exp_table1_address2;
    sc_signal< sc_logic > exp_table1_ce2;
    sc_signal< sc_lv<18> > exp_table1_q2;
    sc_signal< sc_lv<10> > exp_table1_address3;
    sc_signal< sc_logic > exp_table1_ce3;
    sc_signal< sc_lv<18> > exp_table1_q3;
    sc_signal< sc_lv<10> > exp_table1_address4;
    sc_signal< sc_logic > exp_table1_ce4;
    sc_signal< sc_lv<18> > exp_table1_q4;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_lv<10> > y_V_fu_528_p3;
    sc_signal< sc_lv<10> > y_V_reg_860;
    sc_signal< sc_lv<10> > y_V_1_fu_562_p3;
    sc_signal< sc_lv<10> > y_V_1_reg_865;
    sc_signal< sc_lv<10> > y_V_2_fu_596_p3;
    sc_signal< sc_lv<10> > y_V_2_reg_870;
    sc_signal< sc_lv<10> > y_V_3_fu_630_p3;
    sc_signal< sc_lv<10> > y_V_3_reg_875;
    sc_signal< sc_lv<10> > y_V_4_fu_664_p3;
    sc_signal< sc_lv<10> > y_V_4_reg_880;
    sc_signal< sc_lv<18> > exp_res_0_V_reg_910;
    sc_signal< sc_lv<18> > exp_res_1_V_reg_915;
    sc_signal< sc_lv<18> > exp_res_2_V_reg_920;
    sc_signal< sc_lv<18> > exp_res_3_V_reg_925;
    sc_signal< sc_lv<18> > exp_res_4_V_reg_930;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln255_fu_672_p1;
    sc_signal< sc_lv<64> > zext_ln255_1_fu_676_p1;
    sc_signal< sc_lv<64> > zext_ln255_2_fu_680_p1;
    sc_signal< sc_lv<64> > zext_ln255_3_fu_684_p1;
    sc_signal< sc_lv<64> > zext_ln255_4_fu_688_p1;
    sc_signal< sc_lv<64> > zext_ln265_fu_726_p1;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_162_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_162_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_162_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_168_p1;
    sc_signal< sc_lv<16> > select_ln65_fu_168_p2;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_176_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_176_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_176_p2;
    sc_signal< sc_lv<16> > select_ln65_1_fu_182_p1;
    sc_signal< sc_lv<16> > select_ln65_1_fu_182_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_168_p3;
    sc_signal< sc_lv<16> > select_ln65_1_fu_182_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_190_p2;
    sc_signal< sc_lv<16> > select_ln65_2_fu_196_p3;
    sc_signal< sc_lv<16> > icmp_ln1496_3_fu_204_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_3_fu_204_p2;
    sc_signal< sc_lv<16> > x_max_V_fu_210_p1;
    sc_signal< sc_lv<16> > sext_ln703_fu_218_p0;
    sc_signal< sc_lv<16> > x_max_V_fu_210_p3;
    sc_signal< sc_lv<17> > sext_ln703_fu_218_p1;
    sc_signal< sc_lv<17> > sext_ln703_1_fu_222_p1;
    sc_signal< sc_lv<17> > sub_ln1193_fu_226_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_240_p3;
    sc_signal< sc_lv<1> > tmp_fu_232_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_248_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_266_p2;
    sc_signal< sc_lv<16> > sext_ln703_2_fu_278_p0;
    sc_signal< sc_lv<17> > sext_ln703_2_fu_278_p1;
    sc_signal< sc_lv<17> > sub_ln1193_1_fu_282_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_296_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_288_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_304_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_322_p2;
    sc_signal< sc_lv<16> > sext_ln703_3_fu_334_p0;
    sc_signal< sc_lv<17> > sext_ln703_3_fu_334_p1;
    sc_signal< sc_lv<17> > sub_ln1193_2_fu_338_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_352_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_344_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_360_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_378_p2;
    sc_signal< sc_lv<16> > sext_ln703_4_fu_390_p0;
    sc_signal< sc_lv<17> > sext_ln703_4_fu_390_p1;
    sc_signal< sc_lv<17> > sub_ln1193_3_fu_394_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_408_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_400_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_416_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_434_p2;
    sc_signal< sc_lv<16> > sext_ln703_5_fu_446_p0;
    sc_signal< sc_lv<17> > sext_ln703_5_fu_446_p1;
    sc_signal< sc_lv<17> > sub_ln1193_4_fu_450_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_464_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_456_p3;
    sc_signal< sc_lv<1> > xor_ln786_4_fu_472_p2;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_490_p2;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_260_p2;
    sc_signal< sc_lv<10> > tmp_1_fu_502_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_254_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_272_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_512_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_520_p3;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_316_p2;
    sc_signal< sc_lv<10> > tmp_3_fu_536_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_310_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_328_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_546_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_554_p3;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_372_p2;
    sc_signal< sc_lv<10> > tmp_5_fu_570_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_366_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_384_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_580_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_588_p3;
    sc_signal< sc_lv<1> > xor_ln340_8_fu_428_p2;
    sc_signal< sc_lv<10> > tmp_7_fu_604_p4;
    sc_signal< sc_lv<1> > and_ln786_3_fu_422_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_440_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_614_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_622_p3;
    sc_signal< sc_lv<1> > xor_ln340_9_fu_484_p2;
    sc_signal< sc_lv<10> > tmp_9_fu_638_p4;
    sc_signal< sc_lv<1> > and_ln786_4_fu_478_p2;
    sc_signal< sc_lv<1> > or_ln340_4_fu_496_p2;
    sc_signal< sc_lv<10> > select_ln340_8_fu_648_p3;
    sc_signal< sc_lv<10> > select_ln388_4_fu_656_p3;
    sc_signal< sc_lv<18> > add_ln703_fu_692_p0;
    sc_signal< sc_lv<18> > add_ln703_fu_692_p1;
    sc_signal< sc_lv<18> > add_ln703_1_fu_698_p0;
    sc_signal< sc_lv<18> > add_ln703_1_fu_698_p1;
    sc_signal< sc_lv<18> > add_ln703_2_fu_704_p0;
    sc_signal< sc_lv<18> > add_ln703_1_fu_698_p2;
    sc_signal< sc_lv<18> > add_ln703_fu_692_p2;
    sc_signal< sc_lv<18> > add_ln703_2_fu_704_p2;
    sc_signal< sc_lv<18> > exp_sum_V_fu_710_p2;
    sc_signal< sc_lv<10> > y_V_5_fu_716_p4;
    sc_signal< sc_lv<30> > mul_ln1118_fu_825_p2;
    sc_signal< sc_lv<30> > mul_ln1118_1_fu_832_p2;
    sc_signal< sc_lv<30> > mul_ln1118_2_fu_839_p2;
    sc_signal< sc_lv<30> > mul_ln1118_3_fu_846_p2;
    sc_signal< sc_lv<30> > mul_ln1118_4_fu_853_p2;
    sc_signal< sc_lv<18> > mul_ln1118_fu_825_p1;
    sc_signal< sc_lv<30> > sext_ln1116_fu_731_p1;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_832_p1;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_839_p1;
    sc_signal< sc_lv<18> > mul_ln1118_3_fu_846_p1;
    sc_signal< sc_lv<18> > mul_ln1118_4_fu_853_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_1_fu_698_p0();
    void thread_add_ln703_1_fu_698_p1();
    void thread_add_ln703_1_fu_698_p2();
    void thread_add_ln703_2_fu_704_p0();
    void thread_add_ln703_2_fu_704_p2();
    void thread_add_ln703_fu_692_p0();
    void thread_add_ln703_fu_692_p1();
    void thread_add_ln703_fu_692_p2();
    void thread_and_ln786_1_fu_310_p2();
    void thread_and_ln786_2_fu_366_p2();
    void thread_and_ln786_3_fu_422_p2();
    void thread_and_ln786_4_fu_478_p2();
    void thread_and_ln786_fu_254_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_exp_sum_V_fu_710_p2();
    void thread_exp_table1_address0();
    void thread_exp_table1_address1();
    void thread_exp_table1_address2();
    void thread_exp_table1_address3();
    void thread_exp_table1_address4();
    void thread_exp_table1_ce0();
    void thread_exp_table1_ce1();
    void thread_exp_table1_ce2();
    void thread_exp_table1_ce3();
    void thread_exp_table1_ce4();
    void thread_icmp_ln1496_1_fu_176_p0();
    void thread_icmp_ln1496_1_fu_176_p1();
    void thread_icmp_ln1496_1_fu_176_p2();
    void thread_icmp_ln1496_2_fu_190_p2();
    void thread_icmp_ln1496_3_fu_204_p1();
    void thread_icmp_ln1496_3_fu_204_p2();
    void thread_icmp_ln1496_fu_162_p0();
    void thread_icmp_ln1496_fu_162_p1();
    void thread_icmp_ln1496_fu_162_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_mul_ln1118_1_fu_832_p1();
    void thread_mul_ln1118_2_fu_839_p1();
    void thread_mul_ln1118_3_fu_846_p1();
    void thread_mul_ln1118_4_fu_853_p1();
    void thread_mul_ln1118_fu_825_p1();
    void thread_or_ln340_1_fu_328_p2();
    void thread_or_ln340_2_fu_384_p2();
    void thread_or_ln340_3_fu_440_p2();
    void thread_or_ln340_4_fu_496_p2();
    void thread_or_ln340_fu_272_p2();
    void thread_select_ln340_2_fu_546_p3();
    void thread_select_ln340_4_fu_580_p3();
    void thread_select_ln340_6_fu_614_p3();
    void thread_select_ln340_8_fu_648_p3();
    void thread_select_ln340_fu_512_p3();
    void thread_select_ln388_1_fu_554_p3();
    void thread_select_ln388_2_fu_588_p3();
    void thread_select_ln388_3_fu_622_p3();
    void thread_select_ln388_4_fu_656_p3();
    void thread_select_ln388_fu_520_p3();
    void thread_select_ln65_1_fu_182_p1();
    void thread_select_ln65_1_fu_182_p2();
    void thread_select_ln65_1_fu_182_p3();
    void thread_select_ln65_2_fu_196_p3();
    void thread_select_ln65_fu_168_p1();
    void thread_select_ln65_fu_168_p2();
    void thread_select_ln65_fu_168_p3();
    void thread_sext_ln1116_fu_731_p1();
    void thread_sext_ln703_1_fu_222_p1();
    void thread_sext_ln703_2_fu_278_p0();
    void thread_sext_ln703_2_fu_278_p1();
    void thread_sext_ln703_3_fu_334_p0();
    void thread_sext_ln703_3_fu_334_p1();
    void thread_sext_ln703_4_fu_390_p0();
    void thread_sext_ln703_4_fu_390_p1();
    void thread_sext_ln703_5_fu_446_p0();
    void thread_sext_ln703_5_fu_446_p1();
    void thread_sext_ln703_fu_218_p0();
    void thread_sext_ln703_fu_218_p1();
    void thread_sub_ln1193_1_fu_282_p2();
    void thread_sub_ln1193_2_fu_338_p2();
    void thread_sub_ln1193_3_fu_394_p2();
    void thread_sub_ln1193_4_fu_450_p2();
    void thread_sub_ln1193_fu_226_p2();
    void thread_tmp_10_fu_352_p3();
    void thread_tmp_11_fu_400_p3();
    void thread_tmp_12_fu_408_p3();
    void thread_tmp_13_fu_456_p3();
    void thread_tmp_14_fu_464_p3();
    void thread_tmp_1_fu_502_p4();
    void thread_tmp_2_fu_240_p3();
    void thread_tmp_3_fu_536_p4();
    void thread_tmp_4_fu_288_p3();
    void thread_tmp_5_fu_570_p4();
    void thread_tmp_6_fu_296_p3();
    void thread_tmp_7_fu_604_p4();
    void thread_tmp_8_fu_344_p3();
    void thread_tmp_9_fu_638_p4();
    void thread_tmp_fu_232_p3();
    void thread_x_max_V_fu_210_p1();
    void thread_x_max_V_fu_210_p3();
    void thread_xor_ln340_1_fu_322_p2();
    void thread_xor_ln340_2_fu_378_p2();
    void thread_xor_ln340_3_fu_434_p2();
    void thread_xor_ln340_4_fu_490_p2();
    void thread_xor_ln340_5_fu_260_p2();
    void thread_xor_ln340_6_fu_316_p2();
    void thread_xor_ln340_7_fu_372_p2();
    void thread_xor_ln340_8_fu_428_p2();
    void thread_xor_ln340_9_fu_484_p2();
    void thread_xor_ln340_fu_266_p2();
    void thread_xor_ln786_1_fu_304_p2();
    void thread_xor_ln786_2_fu_360_p2();
    void thread_xor_ln786_3_fu_416_p2();
    void thread_xor_ln786_4_fu_472_p2();
    void thread_xor_ln786_fu_248_p2();
    void thread_y_V_1_fu_562_p3();
    void thread_y_V_2_fu_596_p3();
    void thread_y_V_3_fu_630_p3();
    void thread_y_V_4_fu_664_p3();
    void thread_y_V_5_fu_716_p4();
    void thread_y_V_fu_528_p3();
    void thread_zext_ln255_1_fu_676_p1();
    void thread_zext_ln255_2_fu_680_p1();
    void thread_zext_ln255_3_fu_684_p1();
    void thread_zext_ln255_4_fu_688_p1();
    void thread_zext_ln255_fu_672_p1();
    void thread_zext_ln265_fu_726_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
