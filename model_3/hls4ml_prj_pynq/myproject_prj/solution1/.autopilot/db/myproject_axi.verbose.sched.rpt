

================================================================
== Vivado HLS Report for 'myproject_axi'
================================================================
* Date:           Fri Sep 22 02:39:38 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.535 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       94|       94| 0.470 us | 0.470 us |   94|   94|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       23|       23|         9|          1|          1|    16|    yes   |
        |- Loop 2  |       13|       13|        10|          1|          1|     5|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9
  * Pipeline-1: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 76
* Pipeline : 2
  Pipeline-0 : II = 1, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
  Pipeline-1 : II = 1, D = 10, States = { 66 67 68 69 70 71 72 73 74 75 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 11 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 2 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 76 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 66 
76 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %in_data), !map !214"   --->   Operation 77 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_last_V), !map !220"   --->   Operation 78 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %out_data), !map !224"   --->   Operation 79 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_last_V), !map !230"   --->   Operation 80 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @myproject_axi_str) nounwind"   --->   Operation 81 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%in_local_V = alloca i256, align 8" [firmware/myproject_axi.cpp:10]   --->   Operation 82 'alloca' 'in_local_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %in_data, i1* %in_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:5]   --->   Operation 83 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %out_data, i1* %out_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:6]   --->   Operation 84 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:7]   --->   Operation 85 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (1.76ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:13]   --->   Operation 86 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.69>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%is_last_0 = phi i1 [ %is_last, %hls_label_0 ], [ false, %arrayctor.loop1.preheader ]"   --->   Operation 87 'phi' 'is_last_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ %i, %hls_label_0 ], [ 0, %arrayctor.loop1.preheader ]"   --->   Operation 88 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (1.36ns)   --->   "%icmp_ln13 = icmp eq i5 %i_0, -16" [firmware/myproject_axi.cpp:13]   --->   Operation 89 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 90 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [firmware/myproject_axi.cpp:13]   --->   Operation 91 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %0, label %hls_label_0" [firmware/myproject_axi.cpp:13]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%empty_41 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %in_data, i1* %in_last_V)" [firmware/myproject_axi.cpp:3]   --->   Operation 93 'read' 'empty_41' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%in_data_tmp = extractvalue { float, i1 } %empty_41, 0" [firmware/myproject_axi.cpp:3]   --->   Operation 94 'extractvalue' 'in_data_tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node is_last)   --->   "%in_last_V_tmp = extractvalue { float, i1 } %empty_41, 1" [firmware/myproject_axi.cpp:3]   --->   Operation 95 'extractvalue' 'in_last_V_tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 96 [3/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:15]   --->   Operation 96 'fpext' 'd_assign' <Predicate = (!icmp_ln13)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln203 = trunc i5 %i_0 to i4" [firmware/myproject_axi.cpp:15]   --->   Operation 97 'trunc' 'trunc_ln203' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.97ns) (out node of the LUT)   --->   "%is_last = or i1 %in_last_V_tmp, %is_last_0" [firmware/myproject_axi.cpp:16]   --->   Operation 98 'or' 'is_last' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.69>
ST_3 : Operation 99 [2/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:15]   --->   Operation 99 'fpext' 'd_assign' <Predicate = (!icmp_ln13)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.69>
ST_4 : Operation 100 [1/3] (3.69ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:15]   --->   Operation 100 'fpext' 'd_assign' <Predicate = (!icmp_ln13)> <Delay = 3.69> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 2> <II = 1> <Delay = 3.69> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %d_assign to i64" [firmware/myproject_axi.cpp:15]   --->   Operation 101 'bitcast' 'ireg_V' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln556 = trunc i64 %ireg_V to i63" [firmware/myproject_axi.cpp:15]   --->   Operation 102 'trunc' 'trunc_ln556' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%p_Result_12 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [firmware/myproject_axi.cpp:15]   --->   Operation 103 'bitselect' 'p_Result_12' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [firmware/myproject_axi.cpp:15]   --->   Operation 104 'partselect' 'exp_tmp_V' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg_V to i52" [firmware/myproject_axi.cpp:15]   --->   Operation 105 'trunc' 'trunc_ln565' <Predicate = (!icmp_ln13)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.23>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln461 = zext i11 %exp_tmp_V to i12" [firmware/myproject_axi.cpp:15]   --->   Operation 106 'zext' 'zext_ln461' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_s = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565)" [firmware/myproject_axi.cpp:15]   --->   Operation 107 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%p_Result_13 = zext i53 %tmp_s to i54" [firmware/myproject_axi.cpp:15]   --->   Operation 108 'zext' 'p_Result_13' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (3.23ns)   --->   "%man_V_1 = sub i54 0, %p_Result_13" [firmware/myproject_axi.cpp:15]   --->   Operation 109 'sub' 'man_V_1' <Predicate = (!icmp_ln13 & p_Result_12)> <Delay = 3.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (0.94ns)   --->   "%man_V_2 = select i1 %p_Result_12, i54 %man_V_1, i54 %p_Result_13" [firmware/myproject_axi.cpp:15]   --->   Operation 110 'select' 'man_V_2' <Predicate = (!icmp_ln13)> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (2.78ns)   --->   "%icmp_ln571 = icmp eq i63 %trunc_ln556, 0" [firmware/myproject_axi.cpp:15]   --->   Operation 111 'icmp' 'icmp_ln571' <Predicate = (!icmp_ln13)> <Delay = 2.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 112 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, %zext_ln461" [firmware/myproject_axi.cpp:15]   --->   Operation 112 'sub' 'F2' <Predicate = (!icmp_ln13)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (1.99ns)   --->   "%icmp_ln581 = icmp sgt i12 %F2, 10" [firmware/myproject_axi.cpp:15]   --->   Operation 113 'icmp' 'icmp_ln581' <Predicate = (!icmp_ln13)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (1.54ns)   --->   "%add_ln581 = add i12 -10, %F2" [firmware/myproject_axi.cpp:15]   --->   Operation 114 'add' 'add_ln581' <Predicate = (!icmp_ln13)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (1.54ns)   --->   "%sub_ln581 = sub i12 10, %F2" [firmware/myproject_axi.cpp:15]   --->   Operation 115 'sub' 'sub_ln581' <Predicate = (!icmp_ln13)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 116 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581" [firmware/myproject_axi.cpp:15]   --->   Operation 116 'select' 'sh_amt' <Predicate = (!icmp_ln13)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 117 [1/1] (1.99ns)   --->   "%icmp_ln582 = icmp eq i12 %F2, 10" [firmware/myproject_axi.cpp:15]   --->   Operation 117 'icmp' 'icmp_ln582' <Predicate = (!icmp_ln13)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2 to i16" [firmware/myproject_axi.cpp:15]   --->   Operation 118 'trunc' 'trunc_ln583' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_477 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt, i32 4, i32 11)" [firmware/myproject_axi.cpp:15]   --->   Operation 119 'partselect' 'tmp_477' <Predicate = (!icmp_ln13)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 3.96>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln581 = sext i12 %sh_amt to i32" [firmware/myproject_axi.cpp:15]   --->   Operation 120 'sext' 'sext_ln581' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (1.99ns)   --->   "%icmp_ln585 = icmp ult i12 %sh_amt, 54" [firmware/myproject_axi.cpp:15]   --->   Operation 121 'icmp' 'icmp_ln585' <Predicate = (!icmp_ln13)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 122 [1/1] (1.55ns)   --->   "%icmp_ln603 = icmp eq i8 %tmp_477, 0" [firmware/myproject_axi.cpp:15]   --->   Operation 122 'icmp' 'icmp_ln603' <Predicate = (!icmp_ln13)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln586 = zext i32 %sext_ln581 to i54" [firmware/myproject_axi.cpp:15]   --->   Operation 123 'zext' 'zext_ln586' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 124 [2/2] (3.88ns)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:15]   --->   Operation 124 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln13)> <Delay = 3.88> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%bitcast_ln696 = bitcast float %in_data_tmp to i32" [firmware/myproject_axi.cpp:15]   --->   Operation 125 'bitcast' 'bitcast_ln696' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%tmp_478 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %bitcast_ln696, i32 31)" [firmware/myproject_axi.cpp:15]   --->   Operation 126 'bitselect' 'tmp_478' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%select_ln588 = select i1 %tmp_478, i16 -1, i16 0" [firmware/myproject_axi.cpp:15]   --->   Operation 127 'select' 'select_ln588' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 128 [1/1] (0.97ns)   --->   "%or_ln582 = or i1 %icmp_ln571, %icmp_ln582" [firmware/myproject_axi.cpp:15]   --->   Operation 128 'or' 'or_ln582' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, true" [firmware/myproject_axi.cpp:15]   --->   Operation 129 'xor' 'xor_ln582' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 130 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, %xor_ln582" [firmware/myproject_axi.cpp:15]   --->   Operation 130 'and' 'and_ln581' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln585)   --->   "%xor_ln585 = xor i1 %icmp_ln585, true" [firmware/myproject_axi.cpp:15]   --->   Operation 131 'xor' 'xor_ln585' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 132 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln585 = and i1 %and_ln581, %xor_ln585" [firmware/myproject_axi.cpp:15]   --->   Operation 132 'and' 'and_ln585' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node or_ln603)   --->   "%and_ln585_1 = and i1 %and_ln581, %icmp_ln585" [firmware/myproject_axi.cpp:15]   --->   Operation 133 'and' 'and_ln585_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%or_ln581 = or i1 %or_ln582, %icmp_ln581" [firmware/myproject_axi.cpp:15]   --->   Operation 134 'or' 'or_ln581' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%xor_ln581 = xor i1 %or_ln581, true" [firmware/myproject_axi.cpp:15]   --->   Operation 135 'xor' 'xor_ln581' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln603 = and i1 %icmp_ln603, %xor_ln581" [firmware/myproject_axi.cpp:15]   --->   Operation 136 'and' 'and_ln603' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 137 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln603 = or i1 %and_ln603, %and_ln585_1" [firmware/myproject_axi.cpp:15]   --->   Operation 137 'or' 'or_ln603' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 138 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln603_1 = select i1 %and_ln585, i16 %select_ln588, i16 %trunc_ln583" [firmware/myproject_axi.cpp:15]   --->   Operation 138 'select' 'select_ln603_1' <Predicate = (!icmp_ln13)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.88>
ST_7 : Operation 139 [1/2] (3.88ns)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:15]   --->   Operation 139 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln13)> <Delay = 3.88> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, true" [firmware/myproject_axi.cpp:15]   --->   Operation 140 'xor' 'xor_ln571' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%and_ln582 = and i1 %icmp_ln582, %xor_ln571" [firmware/myproject_axi.cpp:15]   --->   Operation 141 'and' 'and_ln582' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%or_ln603_1 = or i1 %and_ln585, %and_ln582" [firmware/myproject_axi.cpp:15]   --->   Operation 142 'or' 'or_ln603_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 143 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln603_2 = or i1 %or_ln603, %or_ln603_1" [firmware/myproject_axi.cpp:15]   --->   Operation 143 'or' 'or_ln603_2' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.98>
ST_8 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586 to i16" [firmware/myproject_axi.cpp:15]   --->   Operation 144 'trunc' 'trunc_ln586' <Predicate = (!icmp_ln13 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%sext_ln581cast = trunc i32 %sext_ln581 to i16" [firmware/myproject_axi.cpp:15]   --->   Operation 145 'trunc' 'sext_ln581cast' <Predicate = (!icmp_ln13 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_8 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%shl_ln604 = shl i16 %trunc_ln583, %sext_ln581cast" [firmware/myproject_axi.cpp:15]   --->   Operation 146 'shl' 'shl_ln604' <Predicate = (!icmp_ln13 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_2)   --->   "%select_ln603 = select i1 %and_ln603, i16 %shl_ln604, i16 %trunc_ln586" [firmware/myproject_axi.cpp:15]   --->   Operation 147 'select' 'select_ln603' <Predicate = (!icmp_ln13 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 148 [1/1] (3.98ns) (out node of the LUT)   --->   "%select_ln603_2 = select i1 %or_ln603, i16 %select_ln603, i16 %select_ln603_1" [firmware/myproject_axi.cpp:15]   --->   Operation 148 'select' 'select_ln603_2' <Predicate = (!icmp_ln13 & or_ln603_2)> <Delay = 3.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 149 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %trunc_ln203, i4 0)" [firmware/myproject_axi.cpp:15]   --->   Operation 149 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "%empty_42 = or i8 %shl_ln, 15" [firmware/myproject_axi.cpp:15]   --->   Operation 150 'or' 'empty_42' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_8 : Operation 151 [1/1] (1.55ns)   --->   "%icmp_ln203 = icmp ugt i8 %shl_ln, %empty_42" [firmware/myproject_axi.cpp:15]   --->   Operation 151 'icmp' 'icmp_ln203' <Predicate = (!icmp_ln13)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.98>
ST_9 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln603_3 = select i1 %or_ln603_2, i16 %select_ln603_2, i16 0" [firmware/myproject_axi.cpp:15]   --->   Operation 152 'select' 'select_ln603_3' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %shl_ln to i9" [firmware/myproject_axi.cpp:15]   --->   Operation 153 'zext' 'zext_ln203' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i8 %empty_42 to i9" [firmware/myproject_axi.cpp:15]   --->   Operation 154 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_2 = zext i16 %select_ln603_3 to i256" [firmware/myproject_axi.cpp:15]   --->   Operation 155 'zext' 'zext_ln203_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%xor_ln203 = xor i9 %zext_ln203, 255" [firmware/myproject_axi.cpp:15]   --->   Operation 156 'xor' 'xor_ln203' <Predicate = (!icmp_ln13 & icmp_ln203)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203 = select i1 %icmp_ln203, i9 %zext_ln203, i9 %zext_ln203_1" [firmware/myproject_axi.cpp:15]   --->   Operation 157 'select' 'select_ln203' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203_1 = select i1 %icmp_ln203, i9 %zext_ln203_1, i9 %zext_ln203" [firmware/myproject_axi.cpp:15]   --->   Operation 158 'select' 'select_ln203_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln203_2 = select i1 %icmp_ln203, i9 %xor_ln203, i9 %zext_ln203" [firmware/myproject_axi.cpp:15]   --->   Operation 159 'select' 'select_ln203_2' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%xor_ln203_1 = xor i9 %select_ln203, 255" [firmware/myproject_axi.cpp:15]   --->   Operation 160 'xor' 'xor_ln203_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_3 = zext i9 %select_ln203_2 to i256" [firmware/myproject_axi.cpp:15]   --->   Operation 161 'zext' 'zext_ln203_3' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_4 = zext i9 %select_ln203_1 to i256" [firmware/myproject_axi.cpp:15]   --->   Operation 162 'zext' 'zext_ln203_4' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_5 = zext i9 %xor_ln203_1 to i256" [firmware/myproject_axi.cpp:15]   --->   Operation 163 'zext' 'zext_ln203_5' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_9 : Operation 164 [1/1] (3.98ns) (out node of the LUT)   --->   "%shl_ln203 = shl i256 %zext_ln203_2, %zext_ln203_3" [firmware/myproject_axi.cpp:15]   --->   Operation 164 'shl' 'shl_ln203' <Predicate = (!icmp_ln13)> <Delay = 3.98> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%shl_ln203_1 = shl i256 -1, %zext_ln203_4" [firmware/myproject_axi.cpp:15]   --->   Operation 165 'shl' 'shl_ln203_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%lshr_ln203 = lshr i256 -1, %zext_ln203_5" [firmware/myproject_axi.cpp:15]   --->   Operation 166 'lshr' 'lshr_ln203' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 167 [1/1] (3.25ns) (out node of the LUT)   --->   "%and_ln203 = and i256 %shl_ln203_1, %lshr_ln203" [firmware/myproject_axi.cpp:15]   --->   Operation 167 'and' 'and_ln203' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 1.55>
ST_10 : Operation 168 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str45)" [firmware/myproject_axi.cpp:13]   --->   Operation 168 'specregionbegin' 'tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:14]   --->   Operation 169 'specpipeline' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%in_local_V_load = load i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:15]   --->   Operation 170 'load' 'in_local_V_load' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%tmp_479 = call i256 @llvm.part.select.i256(i256 %shl_ln203, i32 255, i32 0)" [firmware/myproject_axi.cpp:15]   --->   Operation 171 'partselect' 'tmp_479' <Predicate = (!icmp_ln13 & icmp_ln203)> <Delay = 0.00>
ST_10 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%select_ln203_3 = select i1 %icmp_ln203, i256 %tmp_479, i256 %shl_ln203" [firmware/myproject_axi.cpp:15]   --->   Operation 172 'select' 'select_ln203_3' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%xor_ln203_2 = xor i256 %and_ln203, -1" [firmware/myproject_axi.cpp:15]   --->   Operation 173 'xor' 'xor_ln203_2' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_1 = and i256 %in_local_V_load, %xor_ln203_2" [firmware/myproject_axi.cpp:15]   --->   Operation 174 'and' 'and_ln203_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_2 = and i256 %select_ln203_3, %and_ln203" [firmware/myproject_axi.cpp:15]   --->   Operation 175 'and' 'and_ln203_2' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 176 [1/1] (1.55ns) (out node of the LUT)   --->   "%in_local_V_1 = or i256 %and_ln203_1, %and_ln203_2" [firmware/myproject_axi.cpp:15]   --->   Operation 176 'or' 'in_local_V_1' <Predicate = (!icmp_ln13)> <Delay = 1.55> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "store i256 %in_local_V_1, i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:15]   --->   Operation 177 'store' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%empty_43 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str45, i32 %tmp)" [firmware/myproject_axi.cpp:17]   --->   Operation 178 'specregionend' 'empty_43' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:13]   --->   Operation 179 'br' <Predicate = (!icmp_ln13)> <Delay = 0.00>

State 11 <SV = 2> <Delay = 3.34>
ST_11 : Operation 180 [55/55] (3.34ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 180 'call' 'call_ret' <Predicate = true> <Delay = 3.34> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 3> <Delay = 4.37>
ST_12 : Operation 181 [54/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 181 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 4> <Delay = 4.37>
ST_13 : Operation 182 [53/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 182 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 5> <Delay = 4.37>
ST_14 : Operation 183 [52/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 183 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 6> <Delay = 4.37>
ST_15 : Operation 184 [51/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 184 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 7> <Delay = 4.37>
ST_16 : Operation 185 [50/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 185 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 8> <Delay = 4.37>
ST_17 : Operation 186 [49/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 186 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 9> <Delay = 4.37>
ST_18 : Operation 187 [48/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 187 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 10> <Delay = 4.37>
ST_19 : Operation 188 [47/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 188 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 11> <Delay = 4.37>
ST_20 : Operation 189 [46/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 189 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 12> <Delay = 4.37>
ST_21 : Operation 190 [45/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 190 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 13> <Delay = 4.37>
ST_22 : Operation 191 [44/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 191 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 14> <Delay = 4.37>
ST_23 : Operation 192 [43/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 192 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 15> <Delay = 4.37>
ST_24 : Operation 193 [42/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 193 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 16> <Delay = 4.37>
ST_25 : Operation 194 [41/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 194 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 17> <Delay = 4.37>
ST_26 : Operation 195 [40/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 195 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 18> <Delay = 4.37>
ST_27 : Operation 196 [39/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 196 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 19> <Delay = 4.37>
ST_28 : Operation 197 [38/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 197 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 20> <Delay = 4.37>
ST_29 : Operation 198 [37/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 198 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 21> <Delay = 4.37>
ST_30 : Operation 199 [36/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 199 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 22> <Delay = 4.37>
ST_31 : Operation 200 [35/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 200 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 23> <Delay = 4.37>
ST_32 : Operation 201 [34/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 201 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 33 <SV = 24> <Delay = 4.37>
ST_33 : Operation 202 [33/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 202 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 25> <Delay = 4.37>
ST_34 : Operation 203 [32/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 203 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 35 <SV = 26> <Delay = 4.37>
ST_35 : Operation 204 [31/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 204 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 27> <Delay = 4.37>
ST_36 : Operation 205 [30/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 205 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 28> <Delay = 4.37>
ST_37 : Operation 206 [29/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 206 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 38 <SV = 29> <Delay = 4.37>
ST_38 : Operation 207 [28/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 207 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 39 <SV = 30> <Delay = 4.37>
ST_39 : Operation 208 [27/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 208 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 31> <Delay = 4.37>
ST_40 : Operation 209 [26/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 209 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 41 <SV = 32> <Delay = 4.37>
ST_41 : Operation 210 [25/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 210 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 42 <SV = 33> <Delay = 4.37>
ST_42 : Operation 211 [24/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 211 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 43 <SV = 34> <Delay = 4.37>
ST_43 : Operation 212 [23/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 212 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 44 <SV = 35> <Delay = 4.37>
ST_44 : Operation 213 [22/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 213 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 45 <SV = 36> <Delay = 4.37>
ST_45 : Operation 214 [21/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 214 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 46 <SV = 37> <Delay = 4.37>
ST_46 : Operation 215 [20/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 215 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 47 <SV = 38> <Delay = 4.37>
ST_47 : Operation 216 [19/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 216 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 48 <SV = 39> <Delay = 4.37>
ST_48 : Operation 217 [18/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 217 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 49 <SV = 40> <Delay = 4.37>
ST_49 : Operation 218 [17/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 218 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 41> <Delay = 4.37>
ST_50 : Operation 219 [16/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 219 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 42> <Delay = 4.37>
ST_51 : Operation 220 [15/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 220 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 43> <Delay = 4.37>
ST_52 : Operation 221 [14/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 221 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 44> <Delay = 4.37>
ST_53 : Operation 222 [13/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 222 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 54 <SV = 45> <Delay = 4.37>
ST_54 : Operation 223 [12/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 223 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 55 <SV = 46> <Delay = 4.37>
ST_55 : Operation 224 [11/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 224 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 56 <SV = 47> <Delay = 4.37>
ST_56 : Operation 225 [10/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 225 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 57 <SV = 48> <Delay = 4.37>
ST_57 : Operation 226 [9/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 226 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 58 <SV = 49> <Delay = 4.37>
ST_58 : Operation 227 [8/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 227 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 59 <SV = 50> <Delay = 4.37>
ST_59 : Operation 228 [7/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 228 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 60 <SV = 51> <Delay = 4.37>
ST_60 : Operation 229 [6/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 229 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 61 <SV = 52> <Delay = 4.37>
ST_61 : Operation 230 [5/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 230 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 62 <SV = 53> <Delay = 4.37>
ST_62 : Operation 231 [4/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 231 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 63 <SV = 54> <Delay = 4.37>
ST_63 : Operation 232 [3/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 232 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 64 <SV = 55> <Delay = 4.37>
ST_64 : Operation 233 [2/55] (4.37ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 233 'call' 'call_ret' <Predicate = true> <Delay = 4.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 65 <SV = 56> <Delay = 1.76>
ST_65 : Operation 234 [1/55] (0.00ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16 } @myproject(i256* %in_local_V)"   --->   Operation 234 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_65 : Operation 235 [1/1] (0.00ns)   --->   "%out_local = extractvalue { i16, i16, i16, i16, i16 } %call_ret, 0"   --->   Operation 235 'extractvalue' 'out_local' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 236 [1/1] (0.00ns)   --->   "%out_local_1 = extractvalue { i16, i16, i16, i16, i16 } %call_ret, 1"   --->   Operation 236 'extractvalue' 'out_local_1' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 237 [1/1] (0.00ns)   --->   "%out_local_2 = extractvalue { i16, i16, i16, i16, i16 } %call_ret, 2"   --->   Operation 237 'extractvalue' 'out_local_2' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 238 [1/1] (0.00ns)   --->   "%out_local_3 = extractvalue { i16, i16, i16, i16, i16 } %call_ret, 3"   --->   Operation 238 'extractvalue' 'out_local_3' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 239 [1/1] (0.00ns)   --->   "%out_local_4 = extractvalue { i16, i16, i16, i16, i16 } %call_ret, 4"   --->   Operation 239 'extractvalue' 'out_local_4' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 240 [1/1] (1.76ns)   --->   "br label %1" [firmware/myproject_axi.cpp:21]   --->   Operation 240 'br' <Predicate = true> <Delay = 1.76>

State 66 <SV = 57> <Delay = 4.22>
ST_66 : Operation 241 [1/1] (0.00ns)   --->   "%i2_0 = phi i3 [ 0, %0 ], [ %i_1, %hls_label_1 ]"   --->   Operation 241 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 242 [1/1] (1.13ns)   --->   "%icmp_ln21 = icmp eq i3 %i2_0, -3" [firmware/myproject_axi.cpp:21]   --->   Operation 242 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 243 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 243 'speclooptripcount' 'empty_44' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 244 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i2_0, 1" [firmware/myproject_axi.cpp:21]   --->   Operation 244 'add' 'i_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 245 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %2, label %hls_label_1" [firmware/myproject_axi.cpp:21]   --->   Operation 245 'br' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 246 [1/1] (2.14ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_Mux.ap_auto.5i16.i3(i16 %out_local, i16 %out_local_1, i16 %out_local_2, i16 %out_local_3, i16 %out_local_4, i3 %i2_0)" [firmware/myproject_axi.cpp:23]   --->   Operation 246 'mux' 'tmp_V_3' <Predicate = (!icmp_ln21)> <Delay = 2.14> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 247 [1/1] (0.00ns)   --->   "%p_Result_14 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_3, i32 15)" [firmware/myproject_axi.cpp:23]   --->   Operation 247 'bitselect' 'p_Result_14' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_66 : Operation 248 [1/1] (2.07ns)   --->   "%tmp_V = sub i16 0, %tmp_V_3" [firmware/myproject_axi.cpp:23]   --->   Operation 248 'sub' 'tmp_V' <Predicate = (!icmp_ln21)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 249 [1/1] (1.13ns)   --->   "%icmp_ln24 = icmp eq i3 %i2_0, -4" [firmware/myproject_axi.cpp:24]   --->   Operation 249 'icmp' 'icmp_ln24' <Predicate = (!icmp_ln21)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 250 [1/1] (0.97ns)   --->   "%and_ln24 = and i1 %is_last_0, %icmp_ln24" [firmware/myproject_axi.cpp:24]   --->   Operation 250 'and' 'and_ln24' <Predicate = (!icmp_ln21)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 58> <Delay = 4.20>
ST_67 : Operation 251 [1/1] (2.42ns)   --->   "%icmp_ln935 = icmp eq i16 %tmp_V_3, 0" [firmware/myproject_axi.cpp:23]   --->   Operation 251 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln21)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 252 [1/1] (0.80ns)   --->   "%tmp_V_4 = select i1 %p_Result_14, i16 %tmp_V, i16 %tmp_V_3" [firmware/myproject_axi.cpp:23]   --->   Operation 252 'select' 'tmp_V_4' <Predicate = (!icmp_ln21)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_67 : Operation 253 [1/1] (0.00ns)   --->   "%p_Result_s = call i16 @llvm.part.select.i16(i16 %tmp_V_4, i32 15, i32 0) nounwind" [firmware/myproject_axi.cpp:23]   --->   Operation 253 'partselect' 'p_Result_s' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_67 : Operation 254 [1/1] (0.00ns)   --->   "%p_Result_15 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 -1, i16 %p_Result_s)" [firmware/myproject_axi.cpp:23]   --->   Operation 254 'bitconcatenate' 'p_Result_15' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_67 : Operation 255 [1/1] (3.39ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_15, i1 true) nounwind" [firmware/myproject_axi.cpp:23]   --->   Operation 255 'cttz' 'l' <Predicate = (!icmp_ln21)> <Delay = 3.39> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_67 : Operation 256 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [firmware/myproject_axi.cpp:23]   --->   Operation 256 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln21)> <Delay = 0.00>

State 68 <SV = 59> <Delay = 4.33>
ST_68 : Operation 257 [1/1] (2.55ns)   --->   "%sub_ln944 = sub nsw i32 16, %l" [firmware/myproject_axi.cpp:23]   --->   Operation 257 'sub' 'sub_ln944' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i16" [firmware/myproject_axi.cpp:23]   --->   Operation 258 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_68 : Operation 259 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [firmware/myproject_axi.cpp:23]   --->   Operation 259 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_68 : Operation 260 [1/1] (1.78ns)   --->   "%sub_ln947 = sub i5 9, %trunc_ln947" [firmware/myproject_axi.cpp:23]   --->   Operation 260 'sub' 'sub_ln947' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 69 <SV = 60> <Delay = 2.66>
ST_69 : Operation 261 [1/1] (2.55ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [firmware/myproject_axi.cpp:23]   --->   Operation 261 'add' 'lsb_index' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 262 [1/1] (0.00ns)   --->   "%tmp_481 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [firmware/myproject_axi.cpp:23]   --->   Operation 262 'partselect' 'tmp_481' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_69 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i16" [firmware/myproject_axi.cpp:23]   --->   Operation 263 'zext' 'zext_ln947' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_69 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i16 -1, %zext_ln947" [firmware/myproject_axi.cpp:23]   --->   Operation 264 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_10 = and i16 %tmp_V_4, %lshr_ln947" [firmware/myproject_axi.cpp:23]   --->   Operation 265 'and' 'p_Result_10' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 266 [1/1] (2.66ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i16 %p_Result_10, 0" [firmware/myproject_axi.cpp:23]   --->   Operation 266 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 267 [1/1] (2.55ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [firmware/myproject_axi.cpp:23]   --->   Operation 267 'add' 'add_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 268 [1/1] (2.55ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [firmware/myproject_axi.cpp:23]   --->   Operation 268 'sub' 'sub_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 61> <Delay = 3.60>
ST_70 : Operation 269 [1/1] (2.47ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_481, 0" [firmware/myproject_axi.cpp:23]   --->   Operation 269 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [firmware/myproject_axi.cpp:23]   --->   Operation 270 'and' 'a' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_482 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [firmware/myproject_axi.cpp:23]   --->   Operation 271 'bitselect' 'tmp_482' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_70 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_482, true" [firmware/myproject_axi.cpp:23]   --->   Operation 272 'xor' 'xor_ln949' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 273 [1/1] (2.07ns)   --->   "%add_ln949 = add i16 -24, %trunc_ln944" [firmware/myproject_axi.cpp:23]   --->   Operation 273 'add' 'add_ln949' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_4 = call i1 @_ssdm_op_BitSelect.i1.i16.i16(i16 %tmp_V_4, i16 %add_ln949)" [firmware/myproject_axi.cpp:23]   --->   Operation 274 'bitselect' 'p_Result_4' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_70 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_4, %xor_ln949" [firmware/myproject_axi.cpp:23]   --->   Operation 275 'and' 'and_ln949' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949 = or i1 %and_ln949, %a" [firmware/myproject_axi.cpp:23]   --->   Operation 276 'or' 'or_ln949' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 277 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [firmware/myproject_axi.cpp:23]   --->   Operation 277 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.97>
ST_70 : Operation 278 [1/1] (0.00ns)   --->   "%m = zext i16 %tmp_V_4 to i64" [firmware/myproject_axi.cpp:23]   --->   Operation 278 'zext' 'm' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_70 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln957_1 = zext i16 %tmp_V_4 to i32" [firmware/myproject_axi.cpp:23]   --->   Operation 279 'zext' 'zext_ln957_1' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_70 : Operation 280 [1/1] (2.47ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [firmware/myproject_axi.cpp:23]   --->   Operation 280 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 281 [2/2] (3.60ns)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:23]   --->   Operation 281 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln958_1 = zext i32 %sub_ln958 to i64" [firmware/myproject_axi.cpp:23]   --->   Operation 282 'zext' 'zext_ln958_1' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_70 : Operation 283 [2/2] (3.60ns)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:23]   --->   Operation 283 'shl' 'shl_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 71 <SV = 62> <Delay = 3.60>
ST_71 : Operation 284 [1/2] (3.60ns)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:23]   --->   Operation 284 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 285 [1/2] (3.60ns)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:23]   --->   Operation 285 'shl' 'shl_ln958' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.60> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 1> <II = 1> <Delay = 3.60> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 63> <Delay = 3.52>
ST_72 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958 = zext i32 %lshr_ln958 to i64" [firmware/myproject_axi.cpp:23]   --->   Operation 286 'zext' 'zext_ln958' <Predicate = (!icmp_ln21 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_72 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i64 %zext_ln958, i64 %shl_ln958" [firmware/myproject_axi.cpp:23]   --->   Operation 287 'select' 'm_1' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_72 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln961 = zext i32 %or_ln to i64" [firmware/myproject_axi.cpp:23]   --->   Operation 288 'zext' 'zext_ln961' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_72 : Operation 289 [1/1] (3.52ns) (out node of the LUT)   --->   "%m_2 = add i64 %m_1, %zext_ln961" [firmware/myproject_axi.cpp:23]   --->   Operation 289 'add' 'm_2' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 290 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [firmware/myproject_axi.cpp:23]   --->   Operation 290 'partselect' 'm_5' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_72 : Operation 291 [1/1] (0.00ns)   --->   "%tmp_483 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 25)" [firmware/myproject_axi.cpp:23]   --->   Operation 291 'bitselect' 'tmp_483' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>

State 73 <SV = 64> <Delay = 1.24>
ST_73 : Operation 292 [1/1] (1.24ns)   --->   "%select_ln964 = select i1 %tmp_483, i8 127, i8 126" [firmware/myproject_axi.cpp:23]   --->   Operation 292 'select' 'select_ln964' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 74 <SV = 65> <Delay = 4.36>
ST_74 : Operation 293 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [firmware/myproject_axi.cpp:23]   --->   Operation 293 'zext' 'm_6' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_74 : Operation 294 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 6, %trunc_ln943" [firmware/myproject_axi.cpp:23]   --->   Operation 294 'sub' 'sub_ln964' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_74 : Operation 295 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %select_ln964, %sub_ln964" [firmware/myproject_axi.cpp:23]   --->   Operation 295 'add' 'add_ln964' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_74 : Operation 296 [1/1] (0.00ns)   --->   "%tmp_3 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_14, i8 %add_ln964)" [firmware/myproject_axi.cpp:23]   --->   Operation 296 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_74 : Operation 297 [1/1] (0.00ns)   --->   "%p_Result_16 = call i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32(i64 %m_6, i9 %tmp_3, i32 23, i32 31)" [firmware/myproject_axi.cpp:23]   --->   Operation 297 'partset' 'p_Result_16' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_74 : Operation 298 [1/1] (0.00ns)   --->   "%trunc_ln738 = trunc i64 %p_Result_16 to i32" [firmware/myproject_axi.cpp:23]   --->   Operation 298 'trunc' 'trunc_ln738' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_74 : Operation 299 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %trunc_ln738 to float" [firmware/myproject_axi.cpp:23]   --->   Operation 299 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln21 & !icmp_ln935)> <Delay = 0.00>
ST_74 : Operation 300 [1/1] (0.69ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [firmware/myproject_axi.cpp:23]   --->   Operation 300 'select' 'select_ln935' <Predicate = (!icmp_ln21)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_74 : Operation 301 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln24)" [firmware/myproject_axi.cpp:3]   --->   Operation 301 'write' <Predicate = (!icmp_ln21)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 75 <SV = 66> <Delay = 0.00>
ST_75 : Operation 302 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [firmware/myproject_axi.cpp:21]   --->   Operation 302 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_75 : Operation 303 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:22]   --->   Operation 303 'specpipeline' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_75 : Operation 304 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln24)" [firmware/myproject_axi.cpp:3]   --->   Operation 304 'write' <Predicate = (!icmp_ln21)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_75 : Operation 305 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_2)" [firmware/myproject_axi.cpp:25]   --->   Operation 305 'specregionend' 'empty_45' <Predicate = (!icmp_ln21)> <Delay = 0.00>
ST_75 : Operation 306 [1/1] (0.00ns)   --->   "br label %1" [firmware/myproject_axi.cpp:21]   --->   Operation 306 'br' <Predicate = (!icmp_ln21)> <Delay = 0.00>

State 76 <SV = 58> <Delay = 0.00>
ST_76 : Operation 307 [1/1] (0.00ns)   --->   "ret void" [firmware/myproject_axi.cpp:26]   --->   Operation 307 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('is_last') with incoming values : ('is_last', firmware/myproject_axi.cpp:16) [20]  (1.77 ns)

 <State 2>: 3.7ns
The critical path consists of the following:
	axis read on port 'in_data' (firmware/myproject_axi.cpp:3) [29]  (0 ns)
	'fpext' operation ('d', firmware/myproject_axi.cpp:15) [32]  (3.7 ns)

 <State 3>: 3.7ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:15) [32]  (3.7 ns)

 <State 4>: 3.7ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:15) [32]  (3.7 ns)

 <State 5>: 4.23ns
The critical path consists of the following:
	'sub' operation ('F2', firmware/myproject_axi.cpp:15) [44]  (1.55 ns)
	'icmp' operation ('icmp_ln581', firmware/myproject_axi.cpp:15) [45]  (1.99 ns)
	'select' operation ('sh_amt', firmware/myproject_axi.cpp:15) [48]  (0.697 ns)

 <State 6>: 3.96ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln585', firmware/myproject_axi.cpp:15) [52]  (1.99 ns)
	'xor' operation ('xor_ln585', firmware/myproject_axi.cpp:15) [68]  (0 ns)
	'and' operation ('and_ln585', firmware/myproject_axi.cpp:15) [69]  (0.978 ns)
	'select' operation ('select_ln603_1', firmware/myproject_axi.cpp:15) [76]  (0.993 ns)

 <State 7>: 3.88ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln586', firmware/myproject_axi.cpp:15) [56]  (3.88 ns)

 <State 8>: 3.99ns
The critical path consists of the following:
	'select' operation ('select_ln603', firmware/myproject_axi.cpp:15) [74]  (0 ns)
	'select' operation ('select_ln603_2', firmware/myproject_axi.cpp:15) [78]  (3.99 ns)

 <State 9>: 3.99ns
The critical path consists of the following:
	'select' operation ('select_ln603_3', firmware/myproject_axi.cpp:15) [80]  (0 ns)
	'shl' operation ('shl_ln203', firmware/myproject_axi.cpp:15) [97]  (3.99 ns)

 <State 10>: 1.55ns
The critical path consists of the following:
	'load' operation ('in_local_V_load', firmware/myproject_axi.cpp:15) on local variable 'in_local.V', firmware/myproject_axi.cpp:10 [81]  (0 ns)
	'and' operation ('and_ln203_1', firmware/myproject_axi.cpp:15) [104]  (0 ns)
	'or' operation ('in_local.V', firmware/myproject_axi.cpp:15) [106]  (1.55 ns)

 <State 11>: 3.35ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (3.35 ns)

 <State 12>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 13>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 14>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 15>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 16>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 17>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 18>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 19>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 20>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 21>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 22>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 23>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 24>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 25>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 26>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 27>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 28>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 29>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 30>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 31>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 32>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 33>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 34>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 35>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 36>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 37>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 38>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 39>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 40>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 41>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 42>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 43>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 44>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 45>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 46>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 47>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 48>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 49>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 50>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 51>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 52>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 53>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 54>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 55>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 56>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 57>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 58>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 59>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 60>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 61>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 62>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 63>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 64>: 4.38ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [112]  (4.38 ns)

 <State 65>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:21) [120]  (1.77 ns)

 <State 66>: 4.22ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:21) [120]  (0 ns)
	'mux' operation ('tmp.V', firmware/myproject_axi.cpp:23) [128]  (2.14 ns)
	'sub' operation ('tmp.V', firmware/myproject_axi.cpp:23) [131]  (2.08 ns)

 <State 67>: 4.2ns
The critical path consists of the following:
	'select' operation ('tmp.V', firmware/myproject_axi.cpp:23) [132]  (0.805 ns)
	'cttz' operation ('l', firmware/myproject_axi.cpp:23) [135]  (3.4 ns)

 <State 68>: 4.33ns
The critical path consists of the following:
	'sub' operation ('sub_ln944', firmware/myproject_axi.cpp:23) [136]  (2.55 ns)
	'sub' operation ('sub_ln947', firmware/myproject_axi.cpp:23) [142]  (1.78 ns)

 <State 69>: 2.67ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln947', firmware/myproject_axi.cpp:23) [144]  (0 ns)
	'and' operation ('__Result__', firmware/myproject_axi.cpp:23) [145]  (0 ns)
	'icmp' operation ('icmp_ln947_1', firmware/myproject_axi.cpp:23) [146]  (2.67 ns)

 <State 70>: 3.61ns
The critical path consists of the following:
	'shl' operation ('shl_ln958', firmware/myproject_axi.cpp:23) [163]  (3.61 ns)

 <State 71>: 3.61ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln958', firmware/myproject_axi.cpp:23) [159]  (3.61 ns)

 <State 72>: 3.52ns
The critical path consists of the following:
	'select' operation ('m', firmware/myproject_axi.cpp:23) [164]  (0 ns)
	'add' operation ('m', firmware/myproject_axi.cpp:23) [166]  (3.52 ns)

 <State 73>: 1.25ns
The critical path consists of the following:
	'select' operation ('select_ln964', firmware/myproject_axi.cpp:23) [170]  (1.25 ns)

 <State 74>: 4.37ns
The critical path consists of the following:
	'sub' operation ('sub_ln964', firmware/myproject_axi.cpp:23) [172]  (0 ns)
	'add' operation ('add_ln964', firmware/myproject_axi.cpp:23) [173]  (3.67 ns)
	'select' operation ('select_ln935', firmware/myproject_axi.cpp:23) [178]  (0.698 ns)

 <State 75>: 0ns
The critical path consists of the following:

 <State 76>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
